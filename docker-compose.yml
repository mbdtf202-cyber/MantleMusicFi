version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:6.0
    container_name: mantlemusic-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mantlemusic
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mantlemusic-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: mantlemusic-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mantlemusic-network

  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: mantlemusic-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/mantlemusic?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      AI_SERVICE_URL: http://ai-service:8000
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    networks:
      - mantlemusic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI服务
  ai-service:
    build:
      context: .
      dockerfile: Dockerfile.ai
    container_name: mantlemusic-ai
    restart: unless-stopped
    environment:
      APP_NAME: MantleMusic AI Service
      APP_VERSION: 1.0.0
      DEBUG: false
      HOST: 0.0.0.0
      PORT: 8000
      API_PREFIX: /api/v1
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/mantlemusic?authSource=admin
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: INFO
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    networks:
      - mantlemusic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端应用 (可选，用于生产环境)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: mantlemusic-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_AI_SERVICE_URL: http://localhost:8000
    expose:
      - "3000"
    depends_on:
      - backend
      - ai-service
    networks:
      - mantlemusic-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: mantlemusic-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
      - ai-service
    networks:
      - mantlemusic-network

volumes:
  mongodb_data:
  redis_data:

networks:
  mantlemusic-network:
    driver: bridge